// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 1.0)",
      "flex": 1,
      "paddingHorizontal": 10,
      "paddingTop": 40,
    }
  }
>
  <View
    style={
      Object {
        "backgroundColor": "rgba(0, 0, 0, 0.1)",
        "borderRadius": 15,
        "flexDirection": "row",
        "height": 55,
        "paddingHorizontal": 5,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onBlur={[Function]}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="todo task"
        style={
          Object {
            "flex": 1,
            "fontSize": 18,
            "margin": 1,
            "paddingLeft": 3,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "height": 55,
          "justifyContent": "center",
          "opacity": 1,
          "width": 55,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "rgba(0, 122, 255, 1.0)",
            "fontSize": 18,
            "fontWeight": "600",
          }
        }
      >
        add
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "marginTop": 10,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 122, 255, 1.0)",
          "borderRadius": 8,
          "opacity": 1,
          "padding": 3,
          "width": 120,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "rgba(255, 255, 255, 1.0)",
            "fontSize": 18,
            "fontWeight": "400",
          }
        }
      >
        Clear
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "paddingBottom": 5,
        "paddingTop": 5,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
          "marginBottom": 55,
        }
      }
    >
      <Text
        style={
          Object {
            "color": "rgba(0, 0, 0, 0.3)",
            "fontSize": 30,
            "fontWeight": "800",
          }
        }
      >
        Empty
      </Text>
    </View>
  </View>
</View>
`;
